{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.*$","fontawesome.js","redux/actionTypes.js","redux/reducers/snoowrap.js","redux/reducers/posts.js","redux/reducers/index.js","redux/store.js","credentials.js","api/authentication.js","redux/actions/snoowrap.js","components/Loading/index.js","components/Header/index.js","redux/actions/posts.js","utils.js","components/PostContent/index.js","components/Post/index.js","components/PostFeed/index.js","containers/PostFeedContainer.js","pages/Landing.js","pages/NotFoundPage.js","App.js","Root.js","components/Comment/index.js","components/Test/index.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","library","add","fas","fab","far","initialState","loading","snoowrap","loadingMore","items","combineReducers","state","action","type","posts","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","browserUA","navigator","userAgent","toLocaleLowerCase","clientId","process","REACT_APP_CLIENT_ID","pkg","name","version","location","protocol","host","appOnlyOauth","a","formData","FormData","append","axios","post","headers","Authorization","btoa","credentials","then","res","data","catch","err","console","log","result","authenticate","appOnly","_snoowrap","Snoowrap","accessToken","access_token","initSnoowrap","dispatch","snoowrap_","Loading","spinner","icon","className","Header","Link","to","requestPosts","subreddit","requestMorePosts","receivePosts","fetchPosts","getState","getHot","fetchMorePosts","fetchMore","amount","newPosts","abbrNumber","number","decimalPlaces","exponent","toString","length","decimals","Math","pow","tmp","round","PostContent","is_self","selftext","dangerouslySetInnerHTML","__html","selftext_html","is_video","post_hint","src","media","reddit_video","fallback_url","loop","autoPlay","muted","oembed","html","url","match","alt","title","domain","thumbnail","preview","images","source","href","target","rel","Post","color","randomColor","seed","display_name","user","author","score","style","subreddit_name_prefixed","over_18","moment","unix","created_utc","fromNow","num_comments","PostFeed","loadMorePosts","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","addEventListener","removeEventListener","key","PostFeedContainer","Component","componentDidMount","this","loadPosts","props","error","render","defaultProps","connect","Landing","NotFoundPage","marginTop","padding","App","Switch","Route","exact","path","component","Root","createSnoowrapper","withRouter","getSidebarStyle","level","colors","Comment","comment","subComments","comments","text","Test","constructor","super","karma","postedDate","commentText","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f727f9e7.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 63,\n\t\"./locale.js\": 63\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 145;","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {fas} from '@fortawesome/free-solid-svg-icons';\r\nimport {fab} from '@fortawesome/free-brands-svg-icons';\r\nimport {far} from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(fas,fab,far);","export const GET_SNOOWRAP = \"GET_SNOOWRAP\";\r\nexport const RECEIVE_SNOOWRAP = \"RECEIVE_SNOOWRAP\";\r\n\r\n\r\nexport const REQUEST_POSTS = \"REQUEST_POSTS\";\r\nexport const REQUEST_MORE_POSTS = \"REQUEST_MORE_POSTS\";\r\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\r\n\r\n\r\n","import { GET_SNOOWRAP, RECEIVE_SNOOWRAP } from '../actionTypes';\r\n\r\nconst initialState = {\r\n\tloading: true,\r\n\tsnoowrap: null\r\n};\r\n\r\nexport default function snoowrap(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_SNOOWRAP:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\r\n\t\tcase RECEIVE_SNOOWRAP:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsnoowrap: action.snoowrap\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\r\n\tREQUEST_POSTS,\r\n\tREQUEST_MORE_POSTS,\r\n\tRECEIVE_POSTS\r\n} from '../actionTypes';\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\tloadingMore: false,\r\n\titems: []\r\n};\r\n\r\nexport default function posts(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\r\n\t\tcase REQUEST_MORE_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingMore: true\r\n\t\t\t};\r\n\r\n\t\tcase RECEIVE_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloadingMore: false,\r\n\t\t\t\titems: action.posts\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport snoowrap from './snoowrap';\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n  snoowrap,\r\n  posts\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\n// const middleware = [thunk];\r\n\r\n// const store = createStore(\r\n//   reducer,\r\n//   compose(\r\n//     applyMiddleware(...middleware),\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n// );\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import pkg from '.././package.json'\r\n\r\nconst browserUA = navigator.userAgent.toLocaleLowerCase();\r\n// clientId is retrieve from .env file\r\nconst clientId = process.env.REACT_APP_CLIENT_ID;\r\n\r\nexport default {\r\n  userAgent: `${browserUA}:${pkg.name}:v${pkg.version}(by /u/IITYWYGMAQ)`,\r\n  clientId: clientId\r\n}","import Snoowrap from 'snoowrap';\r\nimport axios from 'axios';\r\n\r\nimport credentials from '../credentials';\r\n\r\nconst { protocol, host } = window.location;\r\n\r\nconst REDIRECT_URI = `${protocol}//${host}/authorize_callback`;\r\n\r\n// https://github.com/reddit-archive/reddit/wiki/OAuth2#application-only-oauth\r\nasync function appOnlyOauth() {\r\n\tconst formData = new FormData();\r\n\tformData.append(\r\n\t\t'grant_type',\r\n\t\t'https://oauth.reddit.com/grants/installed_client'\r\n\t);\r\n\tformData.append('device_id', 'DO_NOT_TRACK_THIS_DEVICE');\r\n\r\n\tlet result = await axios\r\n\t\t.post('https://www.reddit.com/api/v1/access_token', formData, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Basic ${window.btoa(`${credentials.clientId}:`)}`\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\t// console.log(res.data);\r\n\t\t\treturn res.data;\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\r\n\treturn result;\r\n}\r\n\r\nexport default async function authenticate() {\r\n\tconst appOnly = await appOnlyOauth();\r\n\t// console.log(appOnly);\r\n\r\n\tconst _snoowrap = new Snoowrap({\r\n\t\tuserAgent: credentials.userAgent,\r\n\t\taccessToken: appOnly.access_token\r\n\t});\r\n\r\n\treturn _snoowrap;\r\n}\r\n\r\nexport function getAuthUrl(state = '') {\r\n\tconst options = {\r\n\t\tclientId: credentials.clientId,\r\n\t\tscope: [\r\n\t\t\t'identity',\r\n\t\t\t'mysubreddits',\r\n\t\t\t'subscribe',\r\n\t\t\t'vote',\r\n\t\t\t'submit',\r\n\t\t\t'save',\r\n\t\t\t'edit',\r\n\t\t\t'history',\r\n\t\t\t'read',\r\n\t\t\t'privatemessages',\r\n\t\t\t'account'\r\n\t\t],\r\n\t\tredirectUri: REDIRECT_URI,\r\n\t\tpermanent: true,\r\n\t\tstate: state // a random string, this could be validated when the user is redirected back\r\n\t};\r\n\r\n\tconst authUrl = Snoowrap.getAuthUrl(options);\r\n\treturn authUrl;\r\n}\r\n","import authenticate from '../../api/authentication';\r\nimport { GET_SNOOWRAP, RECEIVE_SNOOWRAP } from '../actionTypes';\r\n\r\n/** Action creator */\r\nconst requestSnoowrap = () => {\r\n\treturn {\r\n\t\ttype: GET_SNOOWRAP\r\n\t};\r\n};\r\n\r\nconst receiveSnoowrap = snoowrap => {\r\n\treturn {\r\n\t\ttype: RECEIVE_SNOOWRAP,\r\n\t\tsnoowrap\r\n\t};\r\n};\r\n\r\nexport const initSnoowrap = () => {\r\n\treturn async dispatch => {\r\n\t\tdispatch(requestSnoowrap());\r\n\t\tconst snoowrap_ = await authenticate();\r\n\t\tdispatch(receiveSnoowrap(snoowrap_));\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Loading.scss';\r\n\r\nfunction Loading({type}) {\r\n  const spinner = <FontAwesomeIcon icon=\"spinner\"/>\r\n\r\n  switch(type){\r\n    case \"fullscreen\":\r\n      return <div className=\"fullscreen\">{spinner}</div>\r\n      case \"inline\":\r\n      return <div className=\"inline\">Loading more...</div>\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nLoading.propTypes = {\r\n  type: PropTypes.oneOf([\"regular\", \"fullscreen\", \"inline\"]).isRequired,\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"header-content\">\r\n        <Link to=\"/\" className=\"brand\">\r\n          <div className=\"icon\">\r\n            <FontAwesomeIcon icon={[\"fas\",\"bolt\"]}/>\r\n          </div>\r\n        </Link>\r\n        <small className=\"title\">Neptune</small>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","// import moment from 'moment-mini';\r\nimport {\r\n\tREQUEST_POSTS,\r\n\tREQUEST_MORE_POSTS,\r\n\tRECEIVE_POSTS\r\n} from '../actionTypes';\r\n\r\n/** Action creator */\r\nconst requestPosts = subreddit => {\r\n\treturn {\r\n\t\ttype: REQUEST_POSTS,\r\n\t\tsubreddit\r\n\t};\r\n};\r\n\r\nconst requestMorePosts = subreddit => {\r\n\treturn {\r\n\t\ttype: REQUEST_MORE_POSTS,\r\n\t\tsubreddit\r\n\t};\r\n};\r\n\r\nconst receivePosts = (subreddit, posts) => {\r\n\treturn {\r\n\t\ttype: RECEIVE_POSTS,\r\n\t\tsubreddit,\r\n\t\tposts\r\n\t};\r\n};\r\n\r\nexport const fetchPosts = subreddit => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState();\r\n\t\tconst { snoowrap } = state.snoowrap;\r\n\r\n\t\tdispatch(requestPosts(subreddit));\r\n\t\tconst posts = await snoowrap.getHot(subreddit);\r\n\t\tdispatch(receivePosts(subreddit, posts));\r\n\t};\r\n};\r\n\r\nexport const fetchMorePosts = subreddit => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState();\r\n\t\tconst { items } = state.posts;\r\n\r\n\t\tdispatch(requestMorePosts(subreddit));\r\n\t\tconst newPosts = await items.fetchMore({ amount: 25 });\r\n\t\tdispatch(receivePosts(subreddit, newPosts));\r\n\t};\r\n};\r\n","/**\r\n * Check url if it links to an image  \r\n * @param {String} url \r\n */\r\nexport const isImgUrl = (url) => {\r\n  return url.match(/[^/]+(jpeg|jpg|png|gif)$/) !== null;\r\n}\r\n\r\n/**\r\n * Shorten number over thousand\r\n * \r\n * https://stackoverflow.com/questions/9345136/1000000-to-1m-and-1000-to-1k-and-so-on-in-js/9345181\r\n * @param {Number} number \r\n * @param {Number} decimalPlaces \r\n */\r\nexport const abbrNumber = (number, decimalPlaces = 1) => {\r\n  if(number < 1000) return number;\r\n\r\n  let exponent = number.toString().length;\r\n  const decimals = Math.pow(10, decimalPlaces);\r\n  exponent -= exponent % 3;\r\n  const tmp = Math.pow(10, exponent);\r\n  const shortenNumber = Math.round(number * decimals / tmp) / decimals + \" kMGTPE\"[exponent / 3];\r\n  return shortenNumber;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { isImgUrl } from \"../../utils\";\r\nimport './PostContent.scss';\r\n\r\nfunction PostContent({ post }) {\r\n  if (post.is_self) {\r\n    return (\r\n      <div className=\"post-self-text\">\r\n        <p>{post.selftext}</p>\r\n        <div dangerouslySetInnerHTML={{ __html: post.selftext_html }} />\r\n        <div className=\"overflow-overlay\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // embedded video\r\n  if (post.is_video && post.post_hint === \"hosted:video\") {\r\n    return (\r\n      <video className=\"post-preview-video\" \r\n        src={post.media.reddit_video.fallback_url} \r\n        loop = {true} \r\n        autoPlay = {true}\r\n        muted = {true}\r\n      />\r\n    );\r\n  }\r\n\r\n  // rich video like YouTube\r\n  if (post.post_hint === \"rich:video\") {\r\n    return (\r\n      <div dangerouslySetInnerHTML={{ __html: post.media.oembed.html }} />\r\n    );\r\n  }\r\n  \r\n  // image preview\r\n  if (isImgUrl(post.url)) {\r\n    return <img className=\"post-preview-img\" src={post.url} alt={post.title} />;\r\n  }\r\n\r\n  // handle non-direct imgur links\r\n  if (post.domain === \"imgur.com\") {\r\n    return (\r\n      <img\r\n        className=\"post-preview-img\"\r\n        src={`${post.url}.jpg`}\r\n        alt={post.title}\r\n      />\r\n    );\r\n  }\r\n\r\n  let thumbnail;\r\n\r\n  //handle external content link\r\n  if(post.post_hint === 'link') {\r\n    if(post.preview) {\r\n      thumbnail = (\r\n        <img\r\n          className=\"post-preview-img\"\r\n          src={post.preview.images[0].source.url}\r\n          alt={post.title}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <div className=\"flex\">\r\n          <div className=\"icon\">\r\n            <FontAwesomeIcon icon={\"window-maximize\"}/>\r\n          </div>\r\n          <div className=\"url\">\r\n            {post.url}\r\n          </div>\r\n        </div>\r\n        {thumbnail}\r\n      </a>\r\n    )\r\n  }\r\n  return null;\r\n}\r\n\r\nPostContent.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostContent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from \"moment-mini\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport randomColor from \"randomcolor\";\r\n\r\nimport {abbrNumber} from '../../utils';\r\nimport PostContent from '../PostContent/';\r\nimport './Post.scss';\r\n\r\nexport default function Post({ post }) {\r\n  const color = randomColor({\r\n    seed: post.subreddit.display_name\r\n  });\r\n  \r\n  const user = <div className=\"user\">u/{post.author.name}</div>\r\n\r\n  return (\r\n    <div className=\"post-component\">\r\n      <div className=\"post-score\">\r\n        <button className=\"vote-button vote-up\">\r\n          <FontAwesomeIcon icon=\"arrow-up\"/>\r\n        </button>\r\n        <div className=\"score\">{abbrNumber(post.score)}</div>\r\n        <button className=\"vote-button vote-down\">\r\n          <FontAwesomeIcon icon=\"arrow-down\"/>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"post-data\">\r\n        <div className=\"post-sub\" style={{ color: color}}>\r\n          <small>{post.subreddit_name_prefixed}</small>\r\n          {/* TODO: Move flair to another div */}\r\n          {post.over_18 &&\r\n            <span className=\" post-tag nsfw-tag\">NSFW</span>\r\n          }\r\n        </div>\r\n          <div className=\"post-title\">{post.title}</div>\r\n        <div className=\"content-wrapper\">\r\n          <PostContent post={post} />\r\n        </div>\r\n        <div className=\"bottom-layout\">\r\n          <div className=\"post-info\">\r\n            <small>Posted by {user} - {moment.unix(post.created_utc).fromNow()}</small>\r\n          </div>\r\n          <div className=\"post-comment\">\r\n            <small>{abbrNumber(post.num_comments)} Comments</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './PostFeed.scss';\r\n\r\nimport Loading from '../Loading';\r\nimport Post from '../Post';\r\n\r\nfunction PostFeed({ posts, loading, loadMorePosts, loadingMore }) {\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', handleScroll);\r\n\t\treturn () => window.removeEventListener('scroll', handleScroll);\r\n\t}, []);\r\n\r\n\tfunction handleScroll() {\r\n\t\tif (\r\n\t\t\twindow.innerHeight + document.documentElement.scrollTop !==\r\n\t\t\tdocument.documentElement.offsetHeight\r\n\t\t)\r\n\t\t\treturn;\r\n\t\tloadMorePosts();\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading type='fullscreen' />;\r\n\t}\r\n\r\n\tif (posts.length === 0) {\r\n\t\treturn <div>No post found. :C</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='post-feed'>\r\n\t\t\t{posts.map(post => (\r\n\t\t\t\t<Post key={post.id} post={post} />\r\n\t\t\t))}\r\n\t\t\t{loadingMore && <Loading type='inline' />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nPostFeed.propTypes = {\r\n\tposts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\tloading: PropTypes.bool.isRequired,\r\n\tloadMorePosts: PropTypes.func.isRequired,\r\n\tloadingMore: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default PostFeed;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchPosts, fetchMorePosts } from '../redux/actions/posts';\r\n\r\nimport PostFeed from '../components/PostFeed';\r\n\r\nclass PostFeedContainer extends Component {\r\n\tcomponentDidMount = () => {\r\n\t\tthis.loadPosts();\r\n\t};\r\n\r\n\tloadPosts = () => {\r\n\t\tconst { subreddit } = this.props;\r\n\t\ttry {\r\n\t\t\tthis.props.fetchPosts(subreddit);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tloadMorePosts = () => {\r\n\t\tconst { subreddit } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log('More post fetched');\r\n\t\t\tthis.props.fetchMorePosts(subreddit);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { loading, loadingMore, posts } = this.props;\r\n\t\treturn (\r\n\t\t\t<PostFeed\r\n\t\t\t\tposts={posts}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tloadingMore={loadingMore}\r\n\t\t\t\tloadMorePosts={this.loadMorePosts}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nPostFeedContainer.propTypes = {\r\n\tloading: PropTypes.bool.isRequired,\r\n\tloadingMore: PropTypes.bool.isRequired,\r\n\tfetchPosts: PropTypes.func.isRequired,\r\n\tfetchMorePosts: PropTypes.func.isRequired,\r\n\tsubreddit: PropTypes.string,\r\n\tposts: PropTypes.array.isRequired\r\n};\r\n\r\nPostFeedContainer.defaultProps = {\r\n\tsubreddit: ''\r\n};\r\n\r\nconst mapStateToProps = ({ posts }) => {\r\n\treturn {\r\n\t\tloading: posts.loading,\r\n\t\tloadingMore: posts.loadingMore,\r\n\t\tposts: posts.items\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tfetchPosts: subreddit => {\r\n\t\t\tdispatch(fetchPosts(subreddit));\r\n\t\t},\r\n\t\tfetchMorePosts: subreddit => {\r\n\t\t\tdispatch(fetchMorePosts(subreddit));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PostFeedContainer);\r\n","import React from 'react';\r\nimport PostFeedContainer from '../containers/PostFeedContainer'\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className=\"main-content\">\r\n      <PostFeedContainer subreddit=\"\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFoundPage() {\r\n  return (\r\n    <div style={{ marginTop: '70px',padding:'0 45px'}}>\r\n      <h1>404 Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from './components/Header';\r\nimport Landing from './pages/Landing'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path = \"/\" component = { Landing } />\r\n        <Route component = { NotFoundPage } />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { initSnoowrap } from './redux/actions/snoowrap';\r\nimport Loading from './components/Loading';\r\nimport App from './App';\r\n\r\nclass Root extends Component {\r\n\tcomponentDidMount = () => {\r\n\t\tthis.props.createSnoowrapper();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { loading } = this.props;\r\n\r\n\t\tif (loading) {\r\n\t\t\treturn <Loading type='fullscreen' />;\r\n\t\t}\r\n\r\n\t\treturn <App />;\r\n\t}\r\n}\r\n\r\nRoot.propTypes = {\r\n\tloading: PropTypes.bool.isRequired,\r\n\tcreateSnoowrapper: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ snoowrap }) => {\r\n\treturn {\r\n\t\tloading: snoowrap.loading\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tcreateSnoowrapper: () => {\r\n\t\t\tdispatch(initSnoowrap());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default withRouter(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\tmapDispatchToProps\r\n\t)(Root)\r\n);\r\n","import React from 'react';\r\nimport './Comment.scss';\r\n\r\nfunction getSidebarStyle(level) {\r\n\tconst colors = ['green', 'orange', 'red'];\r\n\tconst index = level % colors.length;\r\n\treturn { 'border-left': 'solid 3px ' + colors[index] };\r\n}\r\n\r\nexport default function Comment({ comment, level = 0 }) {\r\n\tconst subComments = comment.comments || [];\r\n\r\n\treturn (\r\n\t\t<div className='comment'>\r\n\t\t\t<div className='main-comment' style={getSidebarStyle(level)}>\r\n\t\t\t\t<p className='user'>{comment.user}</p>\r\n\t\t\t\t<p className='text'>{comment.text}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='subcomments'>\r\n\t\t\t\t{subComments.map(comment => (\r\n\t\t\t\t\t<Comment comment={comment} level={level + 1} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\nimport Comment from '../Comment';\r\nexport class Test extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomments: [\r\n\t\t\t\t{\r\n\t\t\t\t\tuser: 'user1',\r\n\t\t\t\t\tkarma: 234,\r\n\t\t\t\t\tpostedDate: '5hours ago',\r\n\t\t\t\t\tcommentText: 'text1',\r\n\t\t\t\t\tcomments: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuser: 'user3',\r\n\t\t\t\t\t\t\tkarma: 234,\r\n\t\t\t\t\t\t\tpostedDate: '5hours ago',\r\n\t\t\t\t\t\t\tcommentText: 'responding to text1',\r\n\t\t\t\t\t\t\tcomments: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tuser: 'user1',\r\n\t\t\t\t\t\t\t\t\tkarma: 234,\r\n\t\t\t\t\t\t\t\t\tpostedDate: '5hours ago',\r\n\t\t\t\t\t\t\t\t\tcommentText: 'responding to user3'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tuser: 'user2',\r\n\t\t\t\t\tkarma: 234,\r\n\t\t\t\t\tpostedDate: '5hours ago',\r\n\t\t\t\t\tcommentText: 'text2'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.comments.map(comment => (\r\n\t\t\t\t\t<Comment comment={comment} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './fontawesome';\r\nimport './index.scss';\r\nimport store from './redux/store';\r\nimport Root from './Root';\r\nimport Test from './components/Test';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<Test />\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}